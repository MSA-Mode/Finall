# -------------------------------------------------------------------------- ###
# Question 1a [Github Repo](https://github.com/MSA-Mode/Finall.git)
# -------------------------------------------------------------------------- ###


# -------------------------------------------------------------------------- ###
# Question 2a

library(dplyr)


# Calculate the average fare paid by each sex
average_fare_by_sex <- titanic %>%
  filter(!is.na(fare)) %>%          # Optional: filter out rows where fare is NA
  group_by(sex) %>%                 # Group data by sex
  summarise(average_fare = mean(fare, na.rm = TRUE))  # Calculate average fare for each group

# Display the result
average_fare_by_sex
# -------------------------------------------------------------------------- ###



# -------------------------------------------------------------------------- ###
# Question 2b

library(tidyverse)


# Plot the boxplot
titanic %>%
  # Filter out NA values in age
  filter(!is.na(age)) %>%
  # Use ggplot to create the plot
  ggplot(aes(x = sex, y = age)) +
    geom_boxplot() +
    labs(title = "Boxplot of Ages by Sex",
         x = "Sex",
         y = "Age")

# -------------------------------------------------------------------------- ###


# -------------------------------------------------------------------------- ###
# Question 2

library(tidyverse)


# Plot the density histogram
titanic %>%
  # Filter out NA values in age
  filter(!is.na(age)) %>%
  # Use ggplot to create the plot
  ggplot(aes(x = age, y = ..density..)) +
    geom_histogram(binwidth = 1, color = "black", fill = "lightpink") +
    labs(title = "Density Histogram of Ages",
         x = "Age",
         y = "Density")

# -------------------------------------------------------------------------- ###


# -------------------------------------------------------------------------- ###
# Question 3a

x <- 10:20
result <- x[seq(1, 5, by = 3)]
print(result)

output [1] 10 13.
# -------------------------------------------------------------------------- ###


# -------------------------------------------------------------------------- ###
# Question 3b 

library(dplyr)

dt3 <- inner_join(dt1, dt2, by = "key")
dt3 <- inner_join(dt1, dt2, by = c("column_name_in_dt1" = "column_name_in_dt2"))

# -------------------------------------------------------------------------- ###


# -------------------------------------------------------------------------- ###
# Question 3c 

library(ggplot2)

# Create a scatter plot
plot <- ggplot(dt, aes(x = var1, y = var2)) +
    geom_point() +
    labs(x = " b ", y = " a ", title = "Scatter Plot of var1 vs var2")

# Display the plot
print(plot)

# -------------------------------------------------------------------------- ###


# -------------------------------------------------------------------------- ###
# Question 3d 

output [1] 2 4.


# -------------------------------------------------------------------------- ###


# -------------------------------------------------------------------------- ###
# Question 3e 

# Degrees of freedom (n-1)
df <- 24

# Calculate P(Z <= 1)
probability <- pt(1, df)

# Print the result
print(probability)

# -------------------------------------------------------------------------- ###


# -------------------------------------------------------------------------- ###
# Question 3f 

roll_dice <- function() {
  # Roll two dice
  dice1 <- sample(1:6, 1, replace = TRUE)
  dice2 <- sample(1:6, 1, replace = TRUE)

  # Return the results
  return(c(dice1, dice2))
}
The results [1] 3

# -------------------------------------------------------------------------- ###


# -------------------------------------------------------------------------- ###
# Question 3g 

# t-test
t_test_result <- t.test(age ~ survived, data = titanic, var.equal = TRUE)

# Print the results of the t-test
print(t_test_result)

# -------------------------------------------------------------------------- ###


# -------------------------------------------------------------------------- ###
# Question 4a

library(dplyr)


dat <- tribble(
  ~country, ~year, ~gdp, ~population,
  "England", 2018, 8000, 80,
  "Germany", 2018, 10000, 100,
  "England", 2019, 8100, 90,
  "Germany", 2019, 11000, 110,
  "England", 2020, 8500, 100,
  "Germany", 2020, 10200, 120
)

# Filtering the data to create dat2
dat2 <- dat %>%
  filter((country == "Germany" & year %in% c(2018, 2019)) | (country == "England" & year == 2020))

# Display dat2
dat2

# -------------------------------------------------------------------------- ###


# -------------------------------------------------------------------------- ###
# Question 5a ----
# -------------------------------------------------------------------------- ###